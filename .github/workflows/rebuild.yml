name: Weekly Rebuild of Tiles for Open Data Toronto

on:
  # Schedule workflow to run weekly
#   schedule:
#     - cron: '20 4 * * *'
  # Run workflow manually from the Actions tab
  workflow_dispatch:

permissions:
    contents: write

jobs:
  rebuild:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
            python-version: '3.x'

      - name: Install pip dependencies
        run: |
            python -m pip install --upgrade pip
            if [ -f python/requirements.txt ]; then pip install -r python/requirements.txt; fi

      - name: Install tippecanoe dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ make libsqlite3-dev zlib1g-dev

      - name: Clone tippecanoe source
        run: |
          git clone https://github.com/felt/tippecanoe.git tools/tippecanoe

      - name: Build tippecanoe
        working-directory: tools/tippecanoe
        run: |
          make -j
          echo "$PWD" >> $GITHUB_PATH
      
      - name: Verify tippecanoe version
        run: tippecanoe --version

      - name: Check for data directories
        run: |
          for DIR in "data" "tiles"; do
            if [ ! -d "$DIR" ]; then
              mkdir -p "$DIR"
            fi
          done
      
      - name: Download from Open Data Toronto
        run: python python/download.py
      
      - name: Build vector tiles with tippecanoe
        run: |
          tippecanoe -zg --drop-densest-as-needed \
          --output-to-directory=tiles \
          --layer=roads data/roads.geojson \
          --layer=property-boundaries data/property-boundaries.geojson

      - name: Commit vector tiles
        run: |
          git config --global user.name "$GIT_USER"
          git config --global user.email $GIT_EMAIL
          git add tiles/
          if ! git diff --cached --quiet; then
            git commit -m "Rebuild vector tiles"
            git push
          else
            echo "No changes to commit"
          fi
        env:
          GIT_USER: ${{ vars.GitUser }}
          GIT_EMAIL: ${{ vars.GitEmail }}