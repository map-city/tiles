name: Build Vector Tiles [Toronto Open Data]

on:
  # Schedule weekly workflow run
  schedule:
    - cron: '4 4 * * 4'
  # Allow manual workflow runs
  workflow_dispatch:

permissions:
    contents: write

jobs:
  rebuild:
    runs-on: ubuntu-latest

    env:
      DATA_DIR: data
      TILE_DIR: toronto
      SCRIPT_DIR: python
      GIT_USER: ${{ vars.GitUser }}
      GIT_EMAIL: ${{ vars.GitEmail }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - uses: ./.github/actions/setup-tippecanoe
        with:
          path: tools/tippecanoe
          ref: main

      - name: Install pip dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "$SCRIPT_DIR/requirements.txt" ]; then pip install -r "$SCRIPT_DIR/requirements.txt"; fi

      - name: Verify data directories
        run: mkdir -p "$DATA_DIR" "$TILE_DIR"
      
      - name: Download from Toronto Open Data
        run: python "$SCRIPT_DIR/download.py" --folder "$DATA_DIR" --layers "$DATA_DIR/layers.json" --env ".env_layers"
      
      - name: Load layer filenames
        run: |
          source .env_layers
          echo "LOW_ZOOM_LAYERS=$LOW_ZOOM_LAYERS" >> $GITHUB_ENV
          echo "HIGH_ZOOM_LAYERS=$HIGH_ZOOM_LAYERS" >> $GITHUB_ENV

      - name: Build low zoom vector tiles
        if: ${{ env.LOW_ZOOM_LAYERS != '' }}
        run: |
          tippecanoe \
          --minimum-zoom=9 \
          --maximum-zoom=14 \
          --maximum-tile-bytes=1000000 \
          --coalesce-smallest-as-needed \
          --no-tile-compression \
          --force \
          --output-to-directory="$TILE_DIR" \
          $LOW_ZOOM_LAYERS

      - name: Build high zoom vector tiles
        if: ${{ env.HIGH_ZOOM_LAYERS != '' }}
        run: |
          tippecanoe \
          --minimum-zoom=15 \
          --maximum-zoom=18 \
          --maximum-tile-bytes=1000000 \
          --coalesce-smallest-as-needed \
          --no-tile-compression \
          --force \
          --output-to-directory="$TILE_DIR-high" \
          $HIGH_ZOOM_LAYERS
          rsync -a --remove-source-files "$TILE_DIR-high/" "$TILE_DIR/"

      - name: Commit vector tiles
        run: |
          git config --global user.name "$GIT_USER"
          git config --global user.email $GIT_EMAIL
          git add "$TILE_DIR/"
          if ! git diff --cached --quiet; then
            git commit -m "Rebuild vector tiles"
            git push
          else
            echo "No changes to commit"
          fi
